# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys
set $left  h
set $down  j
set $up    k
set $right l

# Preferred terminal emulator
set $term alacritty

# Preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $ws1 "1 comm"
set $ws2 "2 term"
set $ws3 "3 web"
set $ws4 "4 misc"
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 "9 files"
set $ws0 "10 dash"

set $display_internal   "eDP-1"
set $display_work_left  "Dell Inc. DELL U2415 7MT0192222RU"
set $display_work_right "Dell Inc. DELL U2415 7MT01922234U"

# Assign Workspaces:
assign [class="Studio 4T"] $ws4

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# You can get the names of your outputs by running: swaymsg -t get_outputs
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output $display_internal   res 1920x1080 pos 0,0
output $display_work_left  res 1920x1200 pos 1920,0
output $display_work_right res 1920x1200 pos 3840,0

workspace $ws1 output $display_internal
workspace $ws2 output $display_work_left
workspace $ws3 output $display_work_right
workspace $ws4 output $display_work_left
workspace $ws9 output $display_work_right
workspace $ws0 output $display_work_right

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "1739:31251:SYNA2393:00_06CB:7A13_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input "*" {
    xkb_options caps:swapescape
    xkb_layout us
    xkb_variant altgr-intl

    # w00sh!
    repeat_delay 250
    repeat_rate 70
}


### Key bindings
bindsym Ctrl+Mod1+t exec $term
bindsym $mod+Shift+q kill
bindsym $mod+d exec $menu
bindsym ctrl+mod1+l exec swaylock -c 000000

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
bindsym $mod+$left  workspace prev
bindsym $mod+$right workspace next
bindsym $mod+Left   workspace prev
bindsym $mod+Right  workspace next

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left  move left
bindsym $mod+Shift+$down  move down
bindsym $mod+Shift+$up    move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left  move left
bindsym $mod+Shift+Down  move down
bindsym $mod+Shift+Up    move up
bindsym $mod+Shift+Right move right

#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+return workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Custom keybindings
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute        exec pactl set-sink-mute   @DEFAULT_SINK@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl s 5%-
bindsym XF86MonBrightnessUp   exec brightnessctl s +5%

# Screenshots
set $get_iso_date "$(date -Iseconds)"
set $get_screenshot_path ~/Pictures/screenshot_$get_iso_date.png
bindsym Shift+Print exec grim $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') -g "$(slurp)" $get_screenshot_path
bindsym Print       exec grim $get_screenshot_path
bindsym Mod1+Print  exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $get_screenshot_path

# Screen recording
bindsym $mod+Shift+r exec timeout -s INT 10s wf-recorder -g "$(slurp)" -f ~/Videos/screen-rec_$get_iso_date.mp4

# Layout stuff:
# $mod+b or $mod+v, for horizontal and vertical splits respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 5px
    bindsym Down resize grow height 5px
    bindsym Up resize shrink height 5px
    bindsym Right resize grow width 5px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
set $battery_cmd upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | cut -d : -f2
set $date_cmd date +'%Y-%m-%d %H:%M'
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while echo "$($date_cmd) \| $($battery_cmd) \| "; do sleep 5; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*

exec libinput-gestures-setup start
exec swaymsg workspace $ws2; exec alacritty --title dev
exec swaymsg workspace $ws3; exec firefox https://news.ycombinator.com/
exec swaymsg workspace $ws1; exec firefox $WORK_SLACK_URL
exec swaymsg workspace $ws0; exec alacritty --title monitor
exec swaymsg workspace $ws0; exec firefox https://calendar.google.com/calendar
exec swaymsg workspace $ws0; exec pavucontrol
